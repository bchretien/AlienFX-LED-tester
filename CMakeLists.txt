CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

ENABLE_LANGUAGE(CXX)
SET(CMAKE_VERBOSE_MAKEFILE OFF)

PROJECT(AlienFxLedTester)

FIND_PACKAGE(PkgConfig REQUIRED)

# Find libusb (1.0 or 0.1)
PKG_CHECK_MODULES(LIBUSB-1.0 libusb-1.0)
IF(LIBUSB-1.0_FOUND)
  SET(LIBUSB_LIB "-lusb-1.0")
  SET(LIBUSB_INCLUDE_DIRS ${LIBUSB-1.0_INCLUDE_DIRS})
ELSE(LIBUSB-1.0_FOUND)
  PKG_CHECK_MODULES(LIBUSB REQUIRED libusb)
  SET(LIBUSB_LIB "-lusb")
ENDIF(LIBUSB-1.0_FOUND)

# Useful variable
SET(ALIEN_LED_LIB_SRC_PATH  "${CMAKE_CURRENT_SOURCE_DIR}")

# Include paths
INCLUDE_DIRECTORIES(${ALIEN_LED_LIB_SRC_PATH})
INCLUDE_DIRECTORIES(${LIBUSB_INCLUDE_DIRS})

# Source and headers of the project
SET(ALIEN_LED_SRC "${ALIEN_LED_LIB_SRC_PATH}/alienfx.cpp")
SET(ALIEN_LED_HEADERS "${ALIEN_LED_LIB_SRC_PATH}/alienfx.h")

# 32 or 64bits?
IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
  SET(ARCH "64")
ELSE(CMAKE_SIZEOF_VOID_P EQUAL 8)
  SET(ARCH "32")
ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)

# Library
ADD_LIBRARY(AlienLED${ARCH} SHARED ${ALIEN_LED_SRC} ${ALIEN_LED_HEADERS})

# Link with libusb
TARGET_LINK_LIBRARIES(AlienLED${ARCH} ${LIBUSB_LIB})

ADD_EXECUTABLE(AlienFX_LED_tester "${CMAKE_CURRENT_SOURCE_DIR}/main.cpp")
TARGET_LINK_LIBRARIES(AlienFX_LED_tester AlienLED${ARCH})

# Install directory
SET(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR})
